!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
act_sleep	act_sleep.c	/^void	act_sleep(int act_time)$/;"	f	typeref:typename:void
add_eat_count	add_eat_count.c	/^void	add_eat_count(t_philo *philo)$/;"	f	typeref:typename:void
all_status_die	dead_or_alive.c	/^static void	all_status_die(t_monitor *monitor, int num)$/;"	f	typeref:typename:void	file:
all_status_gym	stomach_check.c	/^static void	all_status_gym(t_monitor *monitor, int num)$/;"	f	typeref:typename:void	file:
alloc_part	mutex_init.c	/^static int	alloc_part(t_mtx **mutex, int num)$/;"	f	typeref:typename:int	file:
alloc_part	philos_init.c	/^static int	alloc_part(t_philo **philos, int num)$/;"	f	typeref:typename:int	file:
argv_atoi	argv_atoi.c	/^int	argv_atoi(t_arg *args, int argc, char *argv[])$/;"	f	typeref:typename:int
dead_or_alive	dead_or_alive.c	/^int		dead_or_alive(t_monitor *monitor, int num)$/;"	f	typeref:typename:int
dead_time_cmp	dead_or_alive.c	/^static int		dead_time_cmp(t_time *l_dead)$/;"	f	typeref:typename:int	file:
do_eat	philo_action.c	/^void	do_eat(t_philo *philo, int *l_status)$/;"	f	typeref:typename:void
do_pthread_create	do_pthread_create.c	/^int	do_pthread_create(t_philo *philos, t_monitor *monitor)$/;"	f	typeref:typename:int
do_pthread_join	do_pthread_join.c	/^int	do_pthread_join(t_philo *philos, t_monitor *monitor)$/;"	f	typeref:typename:int
do_set	philos_init.c	/^static void	do_set(t_philo **philos, t_arg *args, t_mtx *forks, t_mtx *locks)$/;"	f	typeref:typename:void	file:
do_sleep	philo_action.c	/^void	do_sleep(t_philo *philo, t_hand *hand, int *l_status)$/;"	f	typeref:typename:void
drop_fork	drop_fork.c	/^void	drop_fork(t_philo *philo, int left_fork, int right_fork)$/;"	f	typeref:typename:void
first_dead_time_set	monitoring.c	/^static void	first_dead_time_set(t_monitor *monitor, int num)$/;"	f	typeref:typename:void	file:
ft_int_check	ft_int_check.c	/^int	ft_int_check(unsigned int input, unsigned int add, int minus)$/;"	f	typeref:typename:int
ft_isdigit	ft_isdigit.c	/^int	ft_isdigit(int c)$/;"	f	typeref:typename:int
ft_isspace	ft_isspace.c	/^int	ft_isspace(int c)$/;"	f	typeref:typename:int
ft_putendl_fd	ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_strlen	ft_strlen.c	/^size_t	ft_strlen(const char *s)$/;"	f	typeref:typename:size_t
get_dead_time	dead_or_alive.c	/^static void	get_dead_time(t_philo *philo, t_time *l_dead)$/;"	f	typeref:typename:void	file:
get_eat_count	stomach_check.c	/^static void	get_eat_count(t_philo *philo, int *l_eat_count)$/;"	f	typeref:typename:void	file:
get_fork	get_fork.c	/^void	get_fork(t_philo *philo, int fork_id)$/;"	f	typeref:typename:void
get_num	philo_atoi.c	/^static unsigned int	get_num(const char *str, int minus, int *i)$/;"	f	typeref:typename:unsigned int	file:
get_status	get_status.c	/^void	get_status(t_philo *philo, int *status)$/;"	f	typeref:typename:void
get_time	get_time.c	/^long	get_time(void)$/;"	f	typeref:typename:long
hand_init	philosopher.c	/^static void	hand_init(t_hand *hand, int id, t_philo *philo)$/;"	f	typeref:typename:void	file:
init_part	mutex_init.c	/^static int	init_part(t_mtx **mutex, int num)$/;"	f	typeref:typename:int	file:
main	main.c	/^int	main(int argc, char *argv[])$/;"	f	typeref:typename:int
minus_check	philo_atoi.c	/^static void	minus_check(char c, int *minus, int *i)$/;"	f	typeref:typename:void	file:
monitor_init	monitor_init.c	/^void	monitor_init(t_monitor *monitor, t_philo *philos)$/;"	f	typeref:typename:void
monitoring	monitoring.c	/^void	*monitoring(void *arg)$/;"	f	typeref:typename:void *
mutex_destroy	mutex_destroy.c	/^int	mutex_destroy(t_mtx **mutex, int num)$/;"	f	typeref:typename:int
mutex_init	mutex_init.c	/^int	mutex_init(t_mtx **mutex, int num)$/;"	f	typeref:typename:int
now_eating	now_eating.c	/^void	now_eating(int time_to_eat)$/;"	f	typeref:typename:void
now_sleeping	now_sleeping.c	/^void	now_sleeping(int time_to_sleep)$/;"	f	typeref:typename:void
philo_atoi	philo_atoi.c	/^int	philo_atoi(const char *str)$/;"	f	typeref:typename:int
philo_loop	philosopher.c	/^static void	philo_loop(t_philo *philo, t_hand *hand, int id)$/;"	f	typeref:typename:void	file:
philos_init	philos_init.c	/^int	philos_init(t_philo **philos, t_arg *args, t_mtx *forks, t_mtx *locks)$/;"	f	typeref:typename:int
philosopher	philosopher.c	/^void	*philosopher(void *arg)$/;"	f	typeref:typename:void *
put_fork	put_fork.c	/^void	put_fork(t_philo *philo, t_hand *hand)$/;"	f	typeref:typename:void
put_timestamp	put_timestamp.c	/^void	put_timestamp(int id, int status)$/;"	f	typeref:typename:void
return_failure	argv_atoi.c	/^static	int	return_failure(char *msg)$/;"	f	typeref:typename:int	file:
set_dead_time	set_dead_time.c	/^void	set_dead_time(t_philo *philo)$/;"	f	typeref:typename:void
set_msg	put_timestamp.c	/^static void	set_msg(int status, char **msg)$/;"	f	typeref:typename:void	file:
set_status	set_status.c	/^void	set_status(t_philo *philo, int status)$/;"	f	typeref:typename:void
set_status_and_put_timestamp	philosopher.c	/^static void	set_status_and_put_timestamp(t_philo *philo, int status, int id)$/;"	f	typeref:typename:void	file:
stomack_check	stomach_check.c	/^int	stomack_check(t_monitor *monitor, int num)$/;"	f	typeref:typename:int
take_left_fork	philo_action.c	/^void	take_left_fork(t_philo *philo, t_hand *hand, int *l_status)$/;"	f	typeref:typename:void
take_right_fork	philo_action.c	/^void	take_right_fork(t_philo *philo, t_hand *hand, int *l_status)$/;"	f	typeref:typename:void
